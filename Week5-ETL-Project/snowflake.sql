CREATE OR REPLACE STAGE TECHCATALYST_DE.EXTERNAL_STAGE.PETER
    STORAGE_INTEGRATION = s3_int
    URL='s3://techcatalyst-public/dw_stage/peter';

CREATE OR REPLACE FILE FORMAT PALONZO.PA_parquet_format
TYPE = 'PARQUET';

-------------

CREATE OR REPLACE TRANSIENT TABLE TECHCATALYST_DE.PALONZO.SONGS_DIM_TEMP (
    SONG_ID STRING,
    TITLE STRING,
    YEAR STRING,
    ARTIST_ID STRING,
    DURATION FLOAT,
    PARTITION_YEAR STRING,
    PARTITION_ARTIST_ID STRING
);

INSERT INTO SONGS_DIM_TEMP (SONG_ID, TITLE, YEAR, ARTIST_ID, DURATION, PARTITION_YEAR, PARTITION_ARTIST_ID)
SELECT
    $1:song_id::STRING AS SONG_ID,
    $1:title::STRING AS TITLE,
    $1:year::STRING AS YEAR,
    $1:artist_id::STRING AS ARTIST_ID,
    $1:duration::FLOAT AS DURATION,
    REGEXP_SUBSTR(METADATA$FILENAME, 'year=(\\d+)', 1, 1, 'e')::STRING AS PARTITION_YEAR,
    REGEXP_SUBSTR(METADATA$FILENAME, 'artist_id=([^/]+)', 1, 1, 'e')::STRING AS PARTITION_ARTIST_ID
FROM @TECHCATALYST_DE.EXTERNAL_STAGE.PETER/partitionSongs/ (FILE_FORMAT => 'PALONZO.PA_parquet_format', PATTERN => '.*parquet.*');

SELECT * FROM SONGS_DIM_TEMP;

---------------------

CREATE OR REPLACE TRANSIENT TABLE TECHCATALYST_DE.PALONZO.USER_DIM_TEMP (
    USERID STRING,
    FIRSTNAME STRING,
    LASTNAME STRING,
    GENDER STRING,
    LEVEL STRING
);

COPY INTO TECHCATALYST_DE.PALONZO.USER_DIM_TEMP
FROM @TECHCATALYST_DE.EXTERNAL_STAGE.PETER/users/
FILE_FORMAT = (FORMAT_NAME = PALONZO.PA_parquet_format)
ON_ERROR = CONTINUE
MATCH_BY_COLUMN_NAME= CASE_INSENSITIVE;

SELECT * FROM USER_DIM_TEMP;

-------------------

CREATE OR REPLACE TRANSIENT TABLE TECHCATALYST_DE.PALONZO.TIME_DIM_TEMP (
    TS BIGINT,
    DATETIME STRING, 
    START_TIME STRING,
    YEAR STRING,
    MONTH STRING,
    DAYOFMONTH INT,
    WEEKOFYEAR INT,
    PARTITION_YEAR STRING,
    PARTITION_MONTH STRING
);

INSERT INTO TIME_DIM_TEMP (TS, DATETIME, START_TIME, YEAR, MONTH, DAYOFMONTH, WEEKOFYEAR, PARTITION_YEAR, PARTITION_MONTH)
SELECT
    $1:ts::BIGINT AS TS,
    $1:datetime::STRING AS DATETIME,
    $1:start_time::STRING AS START_TIME,
    $1:year::STRING AS YEAR,
    $1:month::STRING AS MONTH,
    $1:dayofmonth::INT AS DAYOFMONTH,
    $1:weekofyear::INT AS WEEKOFYEAR,
    REGEXP_SUBSTR(METADATA$FILENAME, 'year=(\\d+)', 1, 1, 'e')::STRING AS PARTITION_YEAR,
    REGEXP_SUBSTR(METADATA$FILENAME, 'month=([^/]+)', 1, 1, 'e')::STRING AS PARTITION_MONTH
FROM @TECHCATALYST_DE.EXTERNAL_STAGE.PETER/partitionTimes/ (FILE_FORMAT => 'PALONZO.PA_parquet_format', PATTERN => '.*parquet.*');

SELECT * FROM TIME_DIM_TEMP;

-------------

CREATE OR REPLACE TRANSIENT TABLE TECHCATALYST_DE.PALONZO.ARTIST_DIM_TEMP (
    ARTIST_ID STRING,
    ARTIST_NAME STRING,
    ARTIST_LOCATION STRING, 
    ARTIST_LATITUDE DOUBLE,
    ARTIST_LONGITUDE DOUBLE
);

COPY INTO TECHCATALYST_DE.PALONZO.ARTIST_DIM_TEMP
FROM @TECHCATALYST_DE.EXTERNAL_STAGE.PETER/artists/
FILE_FORMAT = (FORMAT_NAME = PALONZO.PA_parquet_format)
ON_ERROR = CONTINUE
MATCH_BY_COLUMN_NAME= CASE_INSENSITIVE;

SELECT * FROM ARTIST_DIM_TEMP;

----------

CREATE OR REPLACE TRANSIENT TABLE TECHCATALYST_DE.PALONZO.SONGPLAYS_FACT_TEMP (
    SONGPLAY_ID INTEGER,
    TS BIGINT,
    USERID STRING,
    LEVEL STRING,
    SONG_ID STRING, -- NULL
    ARTIST_ID STRING, -- NULL
    SESSIONID INTEGER,
    LOCATION STRING,
    USERAGENT STRING
);

COPY INTO TECHCATALYST_DE.PALONZO.SONGPLAYS_FACT_TEMP
FROM @TECHCATALYST_DE.EXTERNAL_STAGE.PETER/songplays/
FILE_FORMAT = (FORMAT_NAME = PALONZO.PA_parquet_format)
ON_ERROR = CONTINUE
MATCH_BY_COLUMN_NAME= CASE_INSENSITIVE;

SELECT * FROM SONGPLAYS_FACT_TEMP;